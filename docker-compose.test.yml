version: '2.3'

networks:
  app_external_network:
  app_internal_network:
    internal: true

services:
  app_web:
    build:
      context: ./
      #dockerfile: Dockerfile.web
      dockerfile: ${DOCKERFILE_PATH}
      args:
        - BUILD_ENV=${BUILD_ENV}
        - CLIENT_LOCALE=${CLIENT_LOCALE}
        - API_CLIENT_ID=${app_API_CLIENT_ID}
        - API_CLIENT_SECRET=${app_API_CLIENT_SECRET}
    #image: monogramm/ngxp-seed:latest-test
    image: ${IMAGE_NAME}
    container_name: app_web
    # [TODO] Enable auto-restart when production-ready
    #restart: always
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - app_internal_network
      - app_external_network
    depends_on:
      - app_api
    volumes:
      - ${APP_HOME}/nginx/logs:/var/logs/nginx
      # Mount SSL keys for SSL
      #- ./nginx/keys/:/etc/nginx/keys
      # Mount custom NGinx config
      - ./nginx/conf.d:/etc/nginx/conf.d:ro

  app_api:
    image: monogramm/spring-rest-api-starter:latest
    container_name: app_api
    # [TODO] Enable auto-restart when production-ready
    #restart: always
    healthcheck:
      test: CMD curl -v --silent http://localhost:${APP_SERVER_PORT}/${APP_SERVER_CONTEXT_PATH}/health 2>&1 | grep UP
      interval: 1m30s
      timeout: 10s
      retries: 3
      #start_period: 40s
    ports:
      - "8080:${APP_SERVER_PORT}"
    networks:
      - app_internal_network
      - app_external_network
    depends_on:
      - app_db
      - app_mailer
    volumes:
      - ${APP_HOME}/backend/logs:/srv/app/logs
      - ${APP_HOME}/backend/keys:/srv/app/keys
      - ${APP_HOME}/backend/config:/srv/app/config
      - ${APP_HOME}/backend/data:/srv/app/data
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      # Application configuration
      - APP_SERVER_PORT=${APP_SERVER_PORT}
      - APP_SERVER_CONTEXT_PATH=/${APP_SERVER_CONTEXT_PATH}
      - APP_TITLE=${APP_TITLE}
      - APP_DOMAIN_NAME=${APP_DOMAIN_NAME}
      - APP_ADMIN_PASSWORD=${APP_ADMIN_PASSWORD}
      - APP_SIGNING_KEY=
      - APP_SIGNING_KEYPAIR_PASS=${APP_SIGNING_KEYPAIR_PASS}
      - APP_DEMO_DATA=true
      # Database configuration (PostgreSQL)
      - DB_PLATFORM=postgresql
      - DB_HOST=app_db
      - DB_NAME=${APP_DB_NAME}
      - DB_USER=${APP_DB_USER}
      - DB_PASSWORD=${APP_DB_PASSWORD}
      # Mail configuration
      - MAIL_HOST=app_mailer
      - MAIL_PORT=1025
      - MAIL_PROTOCOL=smtp
      - MAIL_USER=${APP_SMTP_USER}
      - MAIL_PASSWORD=${APP_SMTP_PASSWD}
      - MAIL_SSL=false
      - MAIL_STARTTLS=false
      # Wait for it...
      - WAIT_FOR=app_db:5432

  app_db:
    image: postgres:10-alpine
    container_name: app_db
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${APP_DB_USER}"]
    expose:
      - '5432'
    #ports:
    #  - "55432:5432"
    networks:
      - app_internal_network
    volumes:
      - /srv/spring_rest_api_starter/postgres/data:/var/lib/postgresql/data
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - POSTGRES_DB=${APP_DB_NAME}
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD}

  # Test services (do not use in production)

  # https://docs.docker.com/docker-hub/builds/automated-testing/
  sut:
    build:
      context: ./docker/test
      dockerfile: Dockerfile
    command: sh /docker_test.sh
    networks:
      - app_internal_network
      - app_external_network
    depends_on:
      app_api:
        condition: service_started
    environment:
      - DOCKER_TEST_CONTAINER=app_web
      #- DOCKER_WEB_CONTAINER=app_web
      #- DOCKER_WEB_PORT=80
      #- DOCKER_WEB_HEALTH_API=${APP_SERVER_CONTEXT_PATH}/login
    volumes_from:
      - app_api
    # If you want, you can sync time & timezone with host
    #volumes:
    #  - /etc/localtime:/etc/localtime:ro
    #  - /etc/timezone:/etc/timezone:ro

  app_mailer:
    image: sj26/mailcatcher:latest
    hostname: app_mailer
    container_name: app_mailer
    restart: always
    expose:
      - '1025'
    ports:
      - "1080:1080"
    networks:
      - app_internal_network
      - app_external_network
    # If you want, you can sync time & timezone with host
    #volumes:
    #  - /etc/localtime:/etc/localtime:ro
    #  - /etc/timezone:/etc/timezone:ro
