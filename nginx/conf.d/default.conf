# This will load balance your backend to one or more destinations.
upstream backend {
  # Example with several backends for load-balancing
  # server api1.example.com:3000;
  # server api1.example.com:3001;
  # server api2.example.com:3000;

  # Simple example with single backend node accessed within docker network
  server app_api:8080;
}

server {
  listen 80 http2 default_server;
  listen [::]:80 http2 default_server;

  # SSL configuration
  #listen 443 ssl http2 default_server;
  #listen [::]:443 ssl http2 default_server;
  #ssl_certificate           /etc/nginx/keys/server.crt;
  #ssl_certificate_key       /etc/nginx/keys/server.key;
  #ssl_session_cache           builtin:1000  shared:SSL:10m;
  #ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
  #ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  #ssl_prefer_server_ciphers   on;

  # make sure outgoing links don't show the URL to the origin
  add_header Referrer-Policy origin;
  root /var/www/html;
  index index.html;
  try_files $uri $uri/ =404;

  server_name localhost;
  # For production with real domain name and HTTPS
  #server_name app.example.com;

  error_log   /var/logs/nginx/app_web.error.log debug;
  access_log  /var/logs/nginx/app_web.access.log;
  rewrite_log on;

  # Reverse Proxy to Backend (Avoids XSS concerns) --Update api to be whatever your site uses to access your backend
  location /api/ {
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    # IMPORTANT: Update example.com to your production site. This will allow cookies to work as expected when using your deployment locally
    #proxy_cookie_domain localhost example.com;
  }

  # Application
  location / {
    # try to serve file directly, fallback to index.php
    try_files $uri /index.html;

    gzip on;
    gzip_types 
      text/css
      text/javascript
      application/x-javascript
      application/javascript
      application/json
    ;

    # Cache to half a day maximum
    add_header Cache-Control "max-age=43200" always;

    # HSTS if SSL connection enabled
    #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;

    # HTTPS header if SSL enabled or reverse proxy used
    #add_header Front-End-Https on;
  }

  location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
    allow all;
    ## Cache images,CSS,JS and webfonts for an hour
    ## Increasing the duration may improve the load-time, but may cause old files to show after an upgrade
    expires 1h;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  ## properly display textfiles in root directory
  location ~/(.*\.md|LEGALNOTICE|LICENSE) {
    default_type text/plain;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  location ~ /\.ht {
    deny all;
  }

  # deny access to .git folder
  #
  location ~ /\.git {
    deny all;
  }

  location ~ /.well-known {
    allow all;
  }

}
